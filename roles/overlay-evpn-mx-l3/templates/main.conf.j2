
protocols {
    bgp {
        group overlay {
            type internal;
            family evpn signaling;
            local-as {{ overlay.local.asn }};
            local-address {{ host.loopback.ip }};
            multipath;
{% for neighbor in overlay.neighbors %}
            neighbor {{neighbor}};
{% endfor %}
        }
    }
}

routing-options {
    router-id {{ host.loopback.ip }};
{#}    autonomous-system {{ overlay.local.asn }}; #}
    forwarding-table {
        ecmp-fast-reroute;
    }
}

routing-instances {
    VRF_1 {
        instance-type vrf;
{% for bd in overlay.bridge_domains %}
{% if bd.ipnetwork is defined %}
        interface irb.{{ bd.vlan_id }};
{% endif %}
{% endfor %}
        route-distinguisher {{ host.loopback.ip }}:1001;
        vrf-target target:10:1;
    }
    VRF_1_VS {
        instance-type virtual-switch;
        vtep-source-interface lo0.0;
        route-distinguisher {{ host.loopback.ip }}:1;
        vrf-import VRF_1_VS_IN;
        vrf-target target:11:1;
        protocols {
            evpn {
                encapsulation vxlan;
                extended-vni-list [ {% for bd in overlay.bridge_domains %} {{ bd.vni_id }} {% endfor %} ];;
                multicast-mode ingress-replication;
            }
        }
        bridge-domains {
{% for bd in overlay.bridge_domains %}
            bd{{ bd.vni_id }} {
{% if bd.network is defined %}
                routing-interface irb.{{ bd.vlan_id }};
{% endif %}
                vlan-id  {{ bd.vlan_id }};
                vxlan {
                    vni {{ bd.vni_id }};
                    ingress-node-replication;
                }
            }
{% endfor %}
        }
    }
}

interfaces {
    irb {
{% for bd in overlay.bridge_domains %}
{% if bd.network is defined %}
        unit {{ bd.vlan_id }} {
            family inet {
                address {{ bd.network }}{{ overlay.local_ip }}/{{ bd.mask }} {
                    virtual-gateway-address {{ bd.network }}{{ overlay.vip_ip }};
                }
            }
        }
{% endif %}
{% endfor %}
    }
}

policy-options {
    policy-statement VRF_1_VS_IN {
        term aaESI {
            from community comm-leaf_esi;
            then accept;
        }
{% for bd in overlay.bridge_domains %}
        term a{{ bd.vni_id }} {
            from community com{{ bd.vni_id }};
            then accept;
        }
{% endfor %}
        term zzz {
            then reject;
        }
    }
{% for bd in overlay.bridge_domains %}
    community com{{ bd.vni_id }} members target:1:{{ bd.vni_id }};
{% endfor %}
    community comm-leaf_esi members target:9999:9999;
}
